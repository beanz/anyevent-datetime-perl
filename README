NAME
    AnyEvent::DateTime - Perl module to create AnyEvent timers from DateTime
    Events

VERSION
    version 1.142000

SYNOPSIS
      use AnyEvent::DateTime;
      use DateTime::Set;
      my $set = DateTime::Set->from_datetimes(dates => [
                  DateTime->now->truncate(to => 'minute')->add(minutes => 1),
                  DateTime->now->truncate(to => 'minute')->add(minutes => 2),
                  DateTime->now->truncate(to => 'minute')->add(minutes => 3),
                ]);
      my $t;
      $t = AnyEvent::DateTime->new(set => $set,
                                   callback => sub {
                                     warn 'Next tick at ', $t->next, "\n"
                                   });
      print 'Next tick will be at ', $t->next, "\n";

      my $t2 =
        AnyEvent::DateTime->new_from_events(type => 'Recurrence',
                                            method => 'hourly',
                                            arguments => [ minutes => [0,30] ],
                                            callback => sub { warn "chime\n" });
      print 'Next chime will be at ', $t2->next, "\n";
      AnyEvent->condvar->recv;

DESCRIPTION
    This module is a wrapper to make it simpler to create various recurrent
    timers with AnyEvent. It can be used to create timers from DateTime::Set
    objects or from "DateTime::Event" object.

AUTHOR
    Mark Hindess <soft-cpan@temporalanomaly.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Mark Hindess.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

